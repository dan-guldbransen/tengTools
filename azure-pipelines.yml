# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- develop
- master
- feature/*
- hotfix/*

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

name: $(date:yyyyMMdd)$(rev:.r)

steps:
- task: GitVersion@5
  inputs:
    runtime: 'full'
    preferBundledVersion: false
- task: NuGetAuthenticate@0
  displayName: 'Litium Nuget Authenticate'
  inputs:
    nuGetServiceConnections: 'Litium Nuget Feed'
    forceReinstallCredentialProvider: true
- task: NuGetToolInstaller@1
  displayName: 'Install Nuget'
- task: NodeTool@0
  displayName: 'Use Node Version 14.x'
  inputs:
    versionSpec: '14.x'
- task: YarnInstaller@3
  inputs:
    versionSpec: '1.x'
    checkLatest: true
- task: Yarn@3
  displayName: 'Yarn Install'
  inputs:
    projectDirectory: 'Src\Litium.Accelerator.Mvc\'
    arguments: 'install'
- task: Yarn@3
  displayName: 'Yarn run prod'
  inputs:
    projectDirectory: 'Src\Litium.Accelerator.Mvc\'
    arguments: 'run prod'
- task: NuGetCommand@2
  displayName: Restore Nugets
  inputs:
    restoreSolution: '$(solution)'
    feedsToUse: 'config'
    nugetConfigPath: 'NuGet.config'
    externalFeedCredentials: 'Litium Nuget Feed'
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Litium.Accelerator.Mvc.$(GitVersion.SemVer).zip'
    replaceExistingArchive: true
- task: OctopusPush@4
  condition: and( 	succeeded(),  	 	or(  		 		startsWith(variables['Build.SourceBranch'], 'refs/heads/develop'),  		 		startsWith(variables['Build.SourceBranch'], 'refs/heads/master'),  		 		startsWith(variables['Build.SourceBranchName'], 'develop'),  		 		startsWith(variables['Build.SourceBranchName'], 'master'),  		 		startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'),  		 		startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix/'), 		startsWith(variables['Build.SourceBranchName'], 'upgrade') 	) 		 )
  inputs:
    OctoConnectedServiceName: 'Octopus'
    Space: 'Spaces-1'
    Package: '$(Build.ArtifactStagingDirectory)/Litium.Accelerator.Mvc.$(GitVersion.SemVer).zip'
    Replace: 'true'
- task: OctopusMetadata@4
  condition: and( 	succeeded(),  	 	or(  		 		startsWith(variables['Build.SourceBranch'], 'refs/heads/develop'),  		 		startsWith(variables['Build.SourceBranch'], 'refs/heads/master'),  		 		startsWith(variables['Build.SourceBranchName'], 'develop'),  		 		startsWith(variables['Build.SourceBranchName'], 'master'),  		 		startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'),  		 		startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix/'), 		startsWith(variables['Build.SourceBranchName'], 'upgrade') 	) 		 )
  inputs:
    OctoConnectedServiceName: 'Octopus'
    Space: 'Spaces-1'
    PackageId: 'Litium.Web'
    PackageVersion: '$(GitVersion.SemVer)'
    Replace: 'IgnoreIfExists'
- task: OctopusCreateRelease@4
  condition: and( 	succeeded(),  	 	or(  		 		startsWith(variables['Build.SourceBranch'], 'refs/heads/develop'),  		 		startsWith(variables['Build.SourceBranch'], 'refs/heads/master'),  		 		startsWith(variables['Build.SourceBranchName'], 'develop'),  		 		startsWith(variables['Build.SourceBranchName'], 'master'),  		 		startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'),  		 		startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix/'), 		startsWith(variables['Build.SourceBranchName'], 'upgrade') 	) 		 )
  inputs:
    OctoConnectedServiceName: 'Octopus'
    Space: 'Spaces-1'
    ProjectGroup: 'ProjectGroups-203'
    ProjectName: 'Projects-402'
    ReleaseNumber: '$(GitVersion.SemVer).$(Build.BuildId)+$(GitVersion.ShortSha)'
    Channel: '$(Build.SourceBranchName)'
    ChangesetCommentReleaseNotes: true
    AdditionalArguments: '--packageversion=$(GitVersion.SemVer)'
- task: PublishBuildArtifacts@1
  condition: and( 	succeeded(),  	 	or(  		 		startsWith(variables['Build.SourceBranch'], 'refs/heads/develop'),  		 		startsWith(variables['Build.SourceBranch'], 'refs/heads/master'),  		 		startsWith(variables['Build.SourceBranchName'], 'develop'),  		 		startsWith(variables['Build.SourceBranchName'], 'master'),  		 		startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'),  		 		startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix/'), 		startsWith(variables['Build.SourceBranchName'], 'upgrade') 	) 		 )
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  