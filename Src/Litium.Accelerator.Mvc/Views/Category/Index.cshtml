@using Litium.Accelerator.ViewModels.Product
@using Litium.Accelerator.Constants

@model CategoryPageViewModel

@{

    var categoryCount = 1;
    var url = Model.Image?.GetUrlToImage(new System.Drawing.Size(0, 0), new System.Drawing.Size(0, 0))?.Url;
}

<div id="search-result">
    @if (Model.ShowSections)
    {
        @Html.BlockContainer(Model.Blocks, BlockContainerNameConstant.Header);
    }
    @if (Model.ShowRegularHeader)
    {
        if (string.IsNullOrWhiteSpace(Model.Description))
        {
            <h1>@Model.Name</h1>
        }
    }

    @if (Model.ShowFilterHeader)
    {
        <h1>@Model.Name <span>(@Model.Pagination.TotalCount)</span></h1>
    }

    <div id="facetedSearchCompact" class="compact-filter"></div>

    @{Html.RenderAction("CategoryFiltering", "Navigation", new { TotalHits = Model.Pagination.TotalCount });}
    @{Html.RenderAction("ChildCategoryNavigation", "Category");}

    @if (Model.ShowSections)
    {
        @Html.BlockContainer(Model.Blocks, BlockContainerNameConstant.Main);
    }

    <div class="subcategoryHeadWrapper">
        <div class="subcategory position-relative">
            @if (!string.IsNullOrEmpty(url))
            {
                <img src="@url" alt="subcategory-image" />
            }
            <div class="subcategory-content-wrapper text-white px-5 py-5 mx-5 @(string.IsNullOrEmpty(url) ? "" : "position-absolute")">
                <div class="py-4 g-md-0 mx-1 g-md-5 @("text-center")">
                    <h2>@Model.Name</h2>
                    <p>@Model.Description</p>
                </div>
            </div>
        </div>
    </div>

    @if (Model.ShowProducts)
    {
        <div class="row">
            <div class="productlistMain">
                <div class="row my-0 px-lg-5">
                    <div class="col px-lg-5">
                        <div class="col d-inline-block">
                            <p class="font-weight-bold text-uppercase ">@Html.WebSiteString("searchresult.sortBy")</p>
                        </div>
                        <div class="col d-inline-block m-lg-2 w-25 p-3">
                            @{Html.RenderAction("CategoryFiltering", "Navigation", new { TotalHits = Model.Products.Count });}
                        </div>
                    </div>
                    <div class="col pt-3">
                        <div class="col">
                            <p class="text-center">@string.Format(@Html.WebSiteString("searchresult.displayingProductsAndPages"), Model.Products.Count, Model.Pagination.PageCount)</p>
                        </div>
                    </div>
                </div>

                @if (Model.Pagination != null && Model.Pagination.TotalCount > 0)
                {
                    if (Model.Pagination.TotalCount > 1)
                    {
                        Html.RenderAction("CategoryFiltering", "Navigation", new { TotalHits = Model.Pagination.TotalCount });
                    }
                    if (Model.Products != null && Model.Products.Any())
                    {
                        <div class="row p-lg-5">
                            @foreach (var product in Model.Products)
                            {
                                <div class="col-6 col-md-4 col-lg-4">
                                    @Html.Partial("~/Views/ProductList/PoductListProductCard.cshtml", product)
                                </div>
                            }
                        </div>
                    }
                    @Html.DisplayFor(x => x.Pagination)
                }
            </div>
        </div>
    }
    else
    {
        <div class="subcategoryContainer">
            <nav class="subnav py-5 px-5" role="navigation">
                @foreach (var link in Model.Links)
                {
                    if (link.Links != null && link.Links.Any())
                    {
                        categoryCount++;
                        foreach (var childLink in link.Links)
                        {
                            if (childLink.Name == Model.Name && categoryCount == 2)
                            {
                                if (childLink.Links != null && childLink.Links.Any())
                                {
                                    <div class="row">
                                        @foreach (var subCategory in childLink.Links)
                                        {
                                            <div class="col-12 col-md-4 col-lg-4">
                                                <a href="@subCategory.Url">
                                                    @Html.Partial("~/Views/Category/SubCategoryCard.cshtml", subCategory)
                                                </a>
                                            </div>
                                        }
                                    </div>
                                }
                            }
                        }
                    }
                }
            </nav>
        </div>
    }
</div>



