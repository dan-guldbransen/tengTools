@model Litium.Accelerator.ViewModels.Product.ProductPageViewModel
<div class="row mt-5">
	<div class="col-12 product-info__container">
		<section class="tab">
			<ul class="nav nav-tabs" id="product-details-tab" role="tablist">
				@if (Model.InformationTemplate != null && Model.InformationTemplate.Any())
				{
					<li class="nav-item" role="presentation">
						<button class="nav-link @(Model.ProductTabProductInformationIsActive ? "active" : string.Empty)" id="product-information-tab" data-bs-toggle="tag" data-bs-target="#product-information" type="button" role="tab" aria-controls="product-information" aria-selected="@Model.ProductTabProductInformationIsActive">@Html.WebSiteString("product.description")</button>
					</li>
				}
				@if (Model.SpecificationTemplate != null && Model.SpecificationTemplate.Any())
				{
					<li class="nav-item" role="presentation">
						<button class="nav-link @(Model.ProductTabSpecificationsIsActive ? "active" : string.Empty)" id="product-specification-tab" data-bs-toggle="tab" data-bs-target="#product-specification" type="button" role="tab" aria-controls="product-specification" aria-selected="@Model.ProductTabSpecificationsIsActive">@Html.WebSiteString("product.specification")</button>
					</li>
				}
				@if (Model.BundleProducts != null && Model.BundleProducts.Any())
				{
					<li class="nav-item" role="presentation">
						<button class="nav-link @(Model.ProductTabPackageIsActive ? "active" : string.Empty)" id="product-package-tab" data-bs-toggle="tab" data-bs-target="#product-package" type="button" role="tab" aria-controls="product-package" aria-selected="@Model.ProductTabPackageIsActive">@Html.WebSiteString("product.package")</button>
					</li>
				}
			</ul>
				@if (Model.InformationTemplate != null && Model.InformationTemplate.Any())
				{
					<div class="tab-pane fade @(Model.ProductTabProductInformationIsActive ? "show active" : string.Empty)" id="product-information" role="tabpanel" aria-labelledby="product-information-tab">
						<div class="container pt-5">
							<div class="row product-info">
								<div class="col-12 col-md-8" data-equalizer-watch>
									<h2 class="product-info__title">
										@Html.WebSiteString("product.description")
									</h2>

									@foreach (var item in Model.InformationTemplate)
									{
										<p>
											@Html.Partial("_" + item.ViewName, item)
										</p>
									}

								</div>
								<div class="col-12 col-md-4" data-equalizer-watch>
									<div class="product-info__image product-info__image--zoom" style="background-image: url('@(Model.ProductItem.Images?.FirstOrDefault()?.GetUrlToImage(Size.Empty, new Size(562, -1)).Url)');"></div>
								</div>
							</div>
						</div>
					</div>
				}
				@if (Model.SpecificationTemplate != null && Model.SpecificationTemplate.Any())
				{
					<div class="tab-pane fade @(Model.ProductTabSpecificationsIsActive ? "show active" : string.Empty)" id="product-specification" role="tabpanel" aria-labelledby="product-specification-tab">
						<div class="container pt-5">
							<div class="row">
								<div class="col-12" data-equalizer-watch>
									<h2 class="product-info__title">
										@Html.WebSiteString("product.specification")
									</h2>

									@foreach (var item in Model.SpecificationTemplate)
									{
										<p>
											@Html.Partial("_" + item.ViewName, item)
										</p>
									}
								</div>
							</div>
						</div>
					</div>
				}
				@if (Model.BundleProducts != null && Model.BundleProducts.Any())
				{
					<div class="tab-pane fade @(Model.ProductTabPackageIsActive ? "show active" : string.Empty)" id="product-package" role="tabpanel" aria-labelledby="product-package-tab">
						<div class="container pt-5">
							<div class="row">
								<div class="col-12" data-equalizer-watch>
									<h2 class="product-info__title">
										@Html.WebSiteString("product.package")
									</h2>

									<ul class="small-block-grid-2 medium-block-grid-4">
										@foreach (var bundleProd in Model.BundleProducts)
										{
											<li>
												<div itemscope itemtype="http://schema.org/Product" class="package-item">
													<h3>@bundleProd.Name</h3>
													<div class="product-item">
														@if (bundleProd.Images != null && bundleProd.Images.Count > 0)
														{
															@Html.ImageFor(x => bundleProd.Images[0], maxSize: new Size(350, 510))
														}
													</div>
												</div>

												<div class="product-detail__price-info">
													@Html.DisplayFor(x => x.ProductItem.Price)
												</div>
											</li>
										}
									</ul>
								</div>
							</div>
						</div>
					</div>
				}
			</section>
	</div>
</div>