@using Litium.Accelerator.ViewModels.Framework
@model SubNavigationLinkModel


@if (Model != null)
{
    <div class="container subcategoryContainer">
        <div class="headerContainer" >
            <div class="headerImage min-vh-100" style="position:relative; ">
                @Html.ImageFor(x => Model.Image)
            </div>
            <div class="p-5 text-white m-lg-5 headerTextDiv" style="position: absolute; width:36.5rem; height:22.75rem;
        top: 31.25rem;
        left: 9.688rem; background-image: linear-gradient(to left,rgba(0,0,0,0.25),rgba(0,0,0,0.6), rgba(0,0,0,1));">
                <div class="row pb-3">
                    <h2 >@Model.Title</h2>
                </div>
                <div  class="row">
                    <p>@Model.Description Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit </p>
                </div>
                <div  class="row mx-5 w-50">
                    <button class=" btn btn-secondary"> @Model.CtaLinkText <i class="bi bi-arrow-right"></i></button>
                </div>
            </div>
        </div>
    </div>
    <nav class="subnav" role="navigation">
        @*
        <h3 class="subnav__header">
            @if (Model.Url != null)
            {
                <a href="@Model.Url">@Model.Name</a>
            }
            else
            {
                @Model.Name @Model.Name
            }
        </h3>
        *@
        @DisplayLinks(Model)
    </nav>
        }


        @helper DisplayLinks(SubNavigationLinkModel contentLink, string ulCssClass = "")
        {
            if (contentLink?.Links != null && contentLink.Links.Any())
            {
                <ul class="subnav__list @ulCssClass">
                    @foreach (var childLink in contentLink.Links)
                    {
                            @*
                        <li class="subnav__item @GetSubnavigationCssClass(childLink)">
                            <a class="subnav__link" href="@childLink.Url">@childLink.Name</a>
                        </li>
                            *@
                            @DisplayLinks(childLink)
                    }
                </ul>

                <div class="px-5 subcategoryContainer">
                    <table class="table table-borderless">
                        <tr>
                            @{ int counter = 0;}
                            @foreach (var childLink in contentLink.Links)
                            {
                                if (childLink.IsSelected == false)
                                {
                                    counter++;
                                    <td class="col-3 productCardTableTd">
                                        @Html.Partial("SubCategoryCard", childLink)
                                    </td>
                                    if (@counter % 3 == 0)
                                    {
                                    @:</tr>
                                    @:<tr>
                                    }
                                }
                            }
                        </tr>
                    </table>
                </div>
            }
        }

        @helper GetSubnavigationCssClass(SubNavigationLinkModel contentLink)
        {
            var classes = new List<string>();

            if (contentLink.Links != null)
            {
                classes.Add("has-children");
                if (contentLink.Links.Any())
                {
                    classes.Add("expanded");
                }
            }

            if (contentLink.IsSelected && (contentLink.Links == null || contentLink.Links.All(x => !x.IsSelected)))
            {
                classes.Add("active");
            }
            @Html.Raw(classes.Any() ? string.Join(" ", classes) : string.Empty)
        }
