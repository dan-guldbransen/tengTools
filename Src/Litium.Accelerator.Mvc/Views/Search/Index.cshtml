@using Litium.Accelerator.ViewModels.Search;
@using Litium.Studio.Extenssions;
@using System.Linq;
@using Litium.Accelerator.Constants

@model SearchResultViewModel
@{
	var hasResults = Model.Products.Count() > 0 || Model.OtherSearchResult?.Total > 0;
}

<div id="search-result">
	<div class="hit-count container pb-4 mt-5">
		<h2 class="hit-count__header mb-5">
			@("searchresult.searchresultfor".AsWebSiteString()) "<span class="query">@Model.SearchTerm</span>":
			@if (hasResults)
			{
				<span class="hit-count__content">
					@($"{Model.Pagination.TotalCount} {"searchresult.products".AsWebSiteString()}")
				</span>
			}
		</h2>
		@if (!hasResults)
		{
			<span class="hit-count__content">
				@Html.Raw("searchresult.nohit".AsWebSiteString())
			</span>
		}

		<div class="d-flex align-items-center justify-content-start">
			<span class="me-3">@Html.WebSiteString("searchtresult.toggle"):</span>

			@if (Model.Products.Any())
			{
				<button class="btn btn-secondary me-3 searchtoggler" data-target="product-list">@Html.WebSiteString("searchresult.products")</button>
			}
			@if (Model.OtherSearchResult != null && Model.OtherSearchResult.Items.Value.Any())
			{
				var btn = Model.Products.Any() ? "btn-outline-dark" : "btn-secondary";
				<button class="btn @btn me-3 searchtoggler" data-target="other-hits">@Html.WebSiteString("searchresult.content")</button>
			}

		</div>
	</div>

	@if (Model.ContainsFilter || (Model.Products.Any() && Model.Products.Count() > 1))
	{
		<div id="facetedSearchCompact" class="compact-filter"></div>
		Html.RenderAction("CategoryFiltering", "Navigation", new { TotalHits = Model.Pagination.TotalCount });
	}

	@if (Model.Products.Any())
	{
		<div class="product-list bg-light">
			<div class="container py-5">
				<h3 class="mb-3">@Html.WebSiteString("searchresult.products")</h3>
				<ul class="row product-list list-unstyled">
					@foreach (var product in Model.Products)
					{
						<li class="col-6 col-md-4 col-lg-3">@Html.DisplayFor(x => product, new { maxWidth = 371 })</li>
					}
				</ul>
			</div>
		</div>
		@Html.DisplayFor(x => x.Pagination)

	}

	@if (Model.OtherSearchResult != null && Model.OtherSearchResult.Items.Value.Any())
	{
		var display = Model.Products.Any() ? "d-none" : "";
		<div class="other-hits bg-light @display">
			<div class="container py-5">
				<h3 class="mb-3">@Html.WebSiteString("searchresult.other")</h3>

				<ul class="list-group list-group-flush w-100">
					@foreach (var related in Model.OtherSearchResult.Items.Value)
					{
						if (related is PageSearchResult page)
						{
							var intro = page.Item.Fields.GetValue<string>(PageFieldNameConstants.Introduction, UICulture);
							<li class="list-group-item bg-transparent">
								<a href="@page.Url"><h3>@page.Name</h3></a>
								@if (!string.IsNullOrEmpty(intro))
								{
									<p>@intro</p>
								}
							</li>
						}
					}
				</ul>
			</div>
		</div>
	}
</div>
